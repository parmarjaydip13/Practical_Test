@{
    ViewBag.Title = "Update Author";
}

@model PracticalTask.Models.AuthorEditViewModel

<link href="~/lib/bootstrap-datepicker/css/bootstrap-datepicker3.css" rel="stylesheet" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.11.3/b-2.0.1/b-html5-2.0.1/date-1.1.1/r-2.2.9/datatables.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">



<div class="row justify-content-center">
    <div class="col-md-6">

        @if (!Html.ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <div asp-validation-summary="ModelOnly"></div>
            </div>
        }

        <form asp-action="Edit" asp-controller="Author">
            <div class="form-group">
                <label>Name</label>
                <input class="form-control" asp-for="Name" maxlength="50" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Email</label>
                <input class="form-control" asp-for="Email" maxlength="50" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Phone No</label>
                <input class="form-control" asp-for="PhoneNumber" maxlength="10" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="AuthorId" />

            <button class="btn btn-secondary" type="button" onclick='location.href = "@Url.Action("Index", "Author")"'>Back</button>
            <button class="btn btn-primary">Update</button>
        </form>
    </div>
</div>

<hr />
<h3>Book Details</h3>

<div class="row">
    <div class="col-md-12 text-right mb-2">
        <button class="btn btn-primary" onclick="openModel(event)">Add Book Record</button>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table id="example" class="table table-bordered table-sm" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Published Date</th>
                    <th>Quantity</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<!--Model Start -->
<div class="modal fade" id="modelBook" tabindex="-1" role="dialog" aria-labelledby="modelBookLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modelBookLabel">Add Book</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="model-body">
                @{await Html.RenderPartialAsync("_BookView", Model.BookViewModel);}
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>
<!--Model end -->


@section Scripts {
    <script src="~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.11.3/b-2.0.1/b-html5-2.0.1/date-1.1.1/r-2.2.9/datatables.min.js"></script>
    <script src="//cdn.datatables.net/plug-ins/1.10.12/sorting/datetime-moment.js"></script>


    <script>
        var table = "";

          $(document).ready(function () {
              $.fn.dataTable.moment('DD-MM-YYYY');

              $('#datetimepicker1').datepicker({
                  format: 'dd-mm-yyyy',
                  autoclose: true,
                  todayHighlight: true,
              });

              $('#datetimepicker1').datepicker('setDate', new Date());


           table = $('#example').DataTable({
               responsive: true,
                "pageLength": 50,
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
               "ajax": {
                   url: '@Url.Action("GetByAuthor", "Book")' + "?authorId=" + @Model.AuthorId,
                    dataSrc: "responseData",
                },
                "columns": [
                    { "data": "name" },
                    { "data": "price" },
                    { "data": "publishDateDt" },
                    { "data": "quantity" },
                    {
                        data: null,
                        render: function (data, type, row) {

                            var data = "'" + data.bookId + "'";

                            var updateFunction = 'UpdateRecord(' + data + ')';
                            var button = '<button class="btn btn-info btn-sm mr-2" onclick="' + updateFunction + '"><i class="fa fa-pencil"></i></button>';

                            var deleteFunction = 'DeleteRecord(' + data + ')';
                            return button + '<button class="btn btn-danger btn-sm" onclick=' + deleteFunction + '><i class="fa fa-trash"></i></button>';
                        }
                    }


                ],
                "columnDefs": [
                    { "targets": "_all", "className": "no-padding" },
                    { "width": "70px", "targets": -1, "className": "text-center" },
                    {
                        targets: [2],
                        render: function (data) {
                            return moment(data).format('DD-MM-YYYY');
                        }
                    },
                    {
                        targets: [1],
                        render: function (data) {
                            return parseFloat(data).toFixed(2);
                        }
                    }

               ],
            })
        });

            $('#PhoneNumber,#Quantity').keyup(function (e) {
            if (/\D/g.test(this.value)) {
                // Filter non-digits from input value.
                this.value = this.value.replace(/\D/g, '');
            }
        });

            $("#PhoneNumber,#Quantity").keydown(function (event) {
            // Allow only backspace and delete
            if (event.keyCode == 46 || event.keyCode == 8 || (event.keyCode >= 96 && event.keyCode <= 105)) {
                // let it happen, don't do anything
            }
            else {
                // Ensure that it is a number and stop the keypress
                if (event.keyCode < 48 || event.keyCode > 57) {
                    event.preventDefault();
                }
            }
        });

            $("input[id*='Price']").keydown(function (event) {

                if (event.shiftKey == true) {
                    event.preventDefault();
                }

                if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                    (event.keyCode >= 96 && event.keyCode <= 105) ||
                    event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                    event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {
                } else {
                    event.preventDefault();
                }

                if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                    event.preventDefault();
                //if a decimal has been added, disable the "."-button

            });

            $("#Price").blur(function () {

                var value = $(this).val().replace(',', '');

                if (isFinite(value) && !isNaN(parseFloat(value)) && value > 0) {
                    //$("#Amount").val(parseFloat(value).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                    $("#Price").val(parseFloat(value).toFixed(2));
                }
                else {
                    $("#Price").val("");
                }
            });

            //

        function AddUpdateBook(event) {
            if ($(event.target).closest('form').valid()) {
                    $.ajax({
                        url: '@Url.Action("AddUpdate","Book")',
                        type: 'post',
                        dataType: 'json',
                        data: $(event.target).closest('form').serialize(),
                        success: function (data) {
                            table.ajax.reload();
                            $('#modelBook').modal('hide')
                        }
                    });
                }
        }


        function openModel(event) {

            $("#formbook").trigger('reset')
            $('#modelBook').modal('show')
            $('.input-validation-error').addClass('input-validation-valid');
            $('.input-validation-error').removeClass('input-validation-error');
            //Removes validation message after input-fields

            $('.field-validation-valid > span').remove();
            $('.field-validation-error').addClass('field-validation-valid');
            $('.field-validation-error').removeClass('field-validation-error');

            //Removes validation summary
            $('.validation-summary-errors').addClass('validation-summary-valid');
            $('.validation-summary-errors').removeClass('validation-summary-errors');

           

        }

            //delete record for book
             function DeleteRecord(id) {
            if (confirm('Are you sure you want to delete this record.')) {

                $.ajax({
                    url: '@Url.Action("Delete", "Book")?Id=' + id,
                    type: "DELETE",
                    success: function (data, textStatus, jqXHR) {
                        $('#example').DataTable().ajax.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {

                    }
                });
            }
        }

        function UpdateRecord(id) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetBookPartailView", "Book")?Id=' + id,
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    $("#model-body").html("");
                    $("#model-body").html(result);
                    $('#modelBook').modal('show')

                    $('#datetimepicker1').datepicker({
                        format: 'dd-mm-yyyy',
                        autoclose: true,
                        todayHighlight: true,
                    });


                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

            $('input').on('input', function () {
                var c = this.selectionStart,
                    r = /[^a-zA-Z0-9 .-]/gi,
                    v = $(this).val();
                if (r.test(v)) {
                    $(this).val(v.replace(r, ''));
                    c--;
                }
                this.setSelectionRange(c, c);
            });
    </script>
}

